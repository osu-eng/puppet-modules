<!-- This file is managed by Puppet -->
<SPConfig xmlns="urn:mace:shibboleth:2.0:native:sp:config"
    xmlns:conf="urn:mace:shibboleth:2.0:native:sp:config"
    xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion"
    xmlns:samlp="urn:oasis:names:tc:SAML:2.0:protocol"
    xmlns:md="urn:oasis:names:tc:SAML:2.0:metadata"
    clockSkew="180">

    <!--
    The ApplicationDefaults element is where most of Shibboleth's SAML bits are defined.
    Resource requests are mapped by the RequestMapper to an applicationId that
    points into to this section (or to the defaults here).
    -->
    <ApplicationDefaults entityID="<%= entity %>"
                         REMOTE_USER="WHOIS-ID KERBEROS-ID eppn persistent-id targeted-id" signing="front">

        <!--
        Controls session lifetimes, address checks, cookie handling, and the protocol handlers.
        You MUST supply an effectively unique handlerURL value for each of your applications.
        The value defaults to /Shibboleth.sso, and should be a relative path, with the SP computing
        a relative value based on the virtual host. Using handlerSSL="true", the default, will force
        the protocol to be https. You should also set cookieProps to "https" for SSL-only sites.
 	-->
        <Sessions lifetime="<%= session_lifetime %>" timeout="<%= session_timeout %>" checkAddress="<%= session_check_address %>"
            relayState="<%= session_relay_state %>" handlerSSL="<%= session_handler_ssl %>" cookieProps="<%= session_cookie_props %>">

            <!--
              Configures SSO for a default IdP. To allow for >1 IdP, remove
              entityID property and adjust discoveryURL to point to discovery service.
              (Set discoveryProtocol to "WAYF" for legacy Shibboleth WAYF support.)
              You can also override entityID on /Login query string, or in RequestMap/htaccess.
              -->
            <SSO entityID="urn:mace:incommon:osu.edu">
              SAML2 SAML1
            </SSO>

            <!-- SAML and local-only logout. -->
            <Logout>SAML2 Local</Logout>

            <!-- Extension service that generates "approximate" metadata based on SP configuration. -->
            <Handler type="MetadataGenerator" Location="/Metadata" signing="false"/>

            <!-- Status reporting service. -->
            <Handler type="Status" Location="/Status" acl="127.0.0.1 140.254.4.9"/>

            <!-- Session diagnostic service. -->
            <Handler type="Session" Location="/Session" showAttributeValues="false"/>

            <!-- JSON feed of discovery information. -->
            <Handler type="DiscoveryFeed" Location="/DiscoFeed"/>
        </Sessions>

        <!--
        Allows overriding of error template information/filenames. You can
        also add attributes with values that can be plugged into the templates.
        -->
        <Errors supportContact="<%= support_contact %>"
            styleSheet="/shibboleth-sp/main.css"/>

        <MetadataProvider type="XML" id="OSU" url="https://webauth.service.ohio-state.edu/OSU-idp-metadata.xml"
                validate="true" maxRefreshDelay="14400" backingFilePath="OSU-idp-metadata.xml">
            <MetadataFilter type="Signature" certificate="OSU-metadata.pem"/>
            <MetadataFilter type="RequireValidUntil" maxValidityInterval="259200"/>
        </MetadataProvider>

        <!-- Map to extract attributes from SAML assertions. -->
        <AttributeExtractor type="XML" validate="true" reloadChanges="false" path="attribute-map.xml"/>

        <!-- Use a SAML query if no attributes are supplied during SSO. -->
        <AttributeResolver type="Query" subjectMatch="true"/>

        <!-- Default filtering policy for recognized attributes, lets other data pass. -->
        <AttributeFilter type="Chaining">
            <AttributeFilter type="XML" path="attribute-policy.xml"/>
            <AttributeFilter type="XML" path="OSU-attribute-policy.xml"/>
        </AttributeFilter>

        <!-- Simple file-based resolver for using a single keypair. -->
        <CredentialResolver type="File" key="sp-key.pem" certificate="sp-cert.pem"/>

        <!--
        The default settings can be overridden by creating ApplicationOverride elements (see
        the https://wiki.shibboleth.net/confluence/display/SHIB2/NativeSPApplicationOverride topic).
        Resource requests are mapped by web server commands, or the RequestMapper, to an
        applicationId setting.

        Example of a second application (for a second vhost) that has a different entityID.
        Resources on the vhost would map to an applicationId of "admin":
        -->
        <!--
        <ApplicationOverride id="admin" entityID="https://admin.example.org/shibboleth"/>
        -->
    </ApplicationDefaults>

    <!-- Policies that determine how to process and authenticate runtime messages. -->
    <SecurityPolicyProvider type="XML" validate="true" path="security-policy.xml"/>

    <!-- Low-level configuration about protocols and bindings available for use. -->
    <ProtocolProvider type="XML" validate="true" reloadChanges="false" path="protocols.xml"/>

</SPConfig>
